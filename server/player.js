let map = `
***#.....................................................................#...
***#.....................................................................#...
***..........................................................................
##.........................................................................##
.............................................................................
.............................................................................
.............................................................................
..........................................##.................................
..........................................##.................................
..........................................##.................................
..........................................##.................................
..........................................##.................................
..........................................##.................................
.............................................................................
.............................................................................
.............................................................................
........###############............###############################...........
.............................................................................
....#........................................................................
....#........................................................................
....#........................................................................
....#........................................................................
....#........................................................................
....#........................................................................
....#........................................................................
....#........................................................................
....#........................................................................
....#........................................................................
....#........................................................................
....#........................................................................
....#........................................................................
....#........................................................................
.............................................................................
.............................................................................
......############################################################...........
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
...............#.............................................................
...............#.............................................................
...............#...........################################################..
...............#.............................................................
...............#.............................................................
...............#.............................................................
...............#........****.................................................
...............#........****.................................................
...............#........****.................................................
...............#........****.................................................
...............#.............................................................
...............#.............................................................
...............#.............................................................
...............#.............................................................
.............................................................................
.....................................#.......................................
.....................................#.......................................
.....................................#.......................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
##.........................................................................##
.............................................................................
...#.....................................................................#...
...#.....................................................................#...
`.trim().split("\n").map(m => m.split(""));

class Tank {
    constructor(name, hp, armor, recharge, penetration, damage, speed, backSpeed, rotationSpeed, turretRotSpeed, maxRotateTurret=360) {
        this.name = name;
        this.hp = hp;
        this.maxHp = hp;
        this.armor = armor;
        this.recharge = recharge;
        this.currentRecharge = 0;
        this.penetration = penetration;
        this.damage = damage;
        this.speed = speed;
        this.backSpeed = backSpeed;
        this.rotationSpeed = rotationSpeed;
        this.turretRotSpeed = turretRotSpeed;
        this.maxRotateTurret = maxRotateTurret;
        this.getDamage = 0; this.hitTime = 0;
    }
}
function checkCollision(obj, length=2, width=1, players) {
    let corners = getCorners(obj, length, width);
    for (let corner of corners) {
        if (corner.y < 0 || corner.y > map.length || corner.x < 0 || corner.x > map[0].length || map[Math.floor(corner.y)][Math.floor(corner.x)] === "#") {
            return [corner];
        }
    }
    for (let pl of Object.values(players)) {
        if (pl.name === obj.owner.name) continue;
        let corners = getCorners(obj, length, width);
        for (let corner of corners) {
            if (checkDot(corner.x, corner.y, pl.posX+1, pl.posY+0.5, pl.angle)) {
                return [pl, corner];
            }
        }
    }
    return false;
}

function checkDot(dotX, dotY, centerX, centerY, angle) {
    let x1 = dotX - centerX;
    let y1 = dotY - centerY;

    let thetaRad = -angle * Math.PI / 180;

    let x2 = x1 * Math.cos(thetaRad) - y1 * Math.sin(thetaRad);
    let y2 = x1 * Math.sin(thetaRad) + y1 * Math.cos(thetaRad);

    return Math.abs(x2) <= 1 && Math.abs(y2) <= 0.5;
}

function getCorners(obj, length=2, width=1){
    const centerX = obj.posX+1 || obj.x+length/2;
    const centerY = obj.posY+0.5 || obj.y+width/2;
    const angleRad = obj.angle * Math.PI / 180;

    // Размеры танка в мировых единицах
    // const length = 2; // 2 клетки (1 клетка = 3 метра)
    // const width = 1;  // 1 клетка

    // Половины размеров
    const halfLength = length / 2;
    const halfWidth = width / 2;

    // Углы в локальной системе координат
    const cornersLocal = [
        { x: -halfLength, y: -halfWidth }, // задний левый
        { x:  halfLength, y: -halfWidth }, // передний левый
        { x:  halfLength, y:  halfWidth }, // передний правый
        { x: -halfLength, y:  halfWidth }  // задний правый
    ];

    // Поворачиваем и преобразуем в мировые координаты
    return cornersLocal.map(corner => {
        // Применяем поворот
        const rotatedX = corner.x * Math.cos(angleRad) - corner.y * Math.sin(angleRad);
        const rotatedY = corner.x * Math.sin(angleRad) + corner.y * Math.cos(angleRad);

        // Возвращаем абсолютные мировые координаты
        return {
            x: centerX + rotatedX,
            y: centerY + rotatedY
        };
    });
}

const tanks = {
    "FV215b 183": () => new Tank("FV215b 183", 1908, 132, 20.18, 315, 930, 34, 14, 33.8, 19.19, 90),
    "ИС-7": () => new Tank("ИС-7", 2550, 240, 11.4, 268, 460, 42, 15, 34.91, 19.68),
    "STB-1": () => new Tank("STB-1", 1850, 165, 6.42, 245, 330, 55, 20, 52.57, 43.81),
    "Leopard 1": () => new Tank("Leopard 1", 1800, 52, 6.23, 255, 360, 65, 23, 59.14, 37.55)
};

module.exports = {tanks, checkCollision, map};