let map = `
...#.....................................................................#...
...#.....................................................................#...
..................#..........................................................
##................#.............................#..........................##
..................#.............................#............................
..................#...........##...##...........#.................#..........
........#.........#...........#.....#...........#.................#..........
........#.........#..............#..............#.................#..........
........#.........#.............###.............#.................#..........
........#.........#..............#..............#.................#..........
........#.........#...........#.....#...........#.................#..........
........#.....................##...##...........#.................#..........
........#.......................................#.................#..........
........#.......................................#..........#......#..........
........#.......................................#..........#.................
........#..................................................#.................
........#..................................................#.................
........#....################....######################....#...##########....
.............................................................................
.............................................................................
.............................................................................
.............................................................................
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
....******************************************************************.......
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.......#............................*...............................#........
.......#...........................***..............................#........
.......#..........................*****.............................#........
.......#............................*...............................#........
.......#............................*...............................#........
.......#............................*...............................#........
.......#..........................*****.............................#........
.......#...........................***..............................#........
.......#............................*...............................#........
.............................................................................
.............................................................................
###..........................................................................
###..........................................................................
###..........................................................................
###..........................................................................
###...................############...........................................
......................############...........................................
......................############...........................................
.............................................................................
.............................................................................
###.................................................*****************........
***..................................................***############**.......
***..................................................****************........
**#............###*****###...................................................
..#............###*****###...................................................
...............###*****###...................................................
.............................................................................
.........................................****................................
.........................................****................................
.........................................####................................
##.......................................####..............................##
.........................................####................................
...#.....................................####............................#...
...#.....................................................................#...
`.trim().split("\n").map(m => m.split(""));

class Tank {
    constructor(name, hp, armor, recharge, penetration, damage, speed, backSpeed, rotationSpeed, turretRotSpeed, maxRotateTurret=360) {
        this.name = name;
        this.hp = hp;
        this.maxHp = hp;
        this.armor = armor;
        this.recharge = recharge;
        this.currentRecharge = 0;
        this.penetration = penetration;
        this.damage = damage;
        this.speed = speed;
        this.backSpeed = backSpeed;
        this.rotationSpeed = rotationSpeed;
        this.turretRotSpeed = turretRotSpeed;
        this.maxRotateTurret = maxRotateTurret;
        this.getDamage = 0; this.hitTime = 0;
    }
}
function checkCollision(obj, length=2, width=1, players) {
    let corners = getCorners(obj, length, width);
    for (let corner of corners) {
        if (corner.y < 0 || corner.y > map.length || corner.x < 0 || corner.x > map[0].length || map[Math.floor(corner.y)][Math.floor(corner.x)] === "#") {
            return [corner];
        }
    }
    for (let pl of Object.values(players)) {
        if (pl.name === obj.owner.name) continue;
        let corners = getCorners(obj, length, width);
        for (let corner of corners) {
            if (checkDot(corner.x, corner.y, pl.posX+1, pl.posY+0.5, pl.angle)) {
                return [pl, corner];
            }
        }
    }
    return false;
}

function checkDot(dotX, dotY, centerX, centerY, angle) {
    let x1 = dotX - centerX;
    let y1 = dotY - centerY;

    let thetaRad = -angle * Math.PI / 180;

    let x2 = x1 * Math.cos(thetaRad) - y1 * Math.sin(thetaRad);
    let y2 = x1 * Math.sin(thetaRad) + y1 * Math.cos(thetaRad);

    return Math.abs(x2) <= 1 && Math.abs(y2) <= 0.5;
}

function getCorners(obj, length=2, width=1){
    const centerX = obj.posX+1 || obj.x+length/2;
    const centerY = obj.posY+0.5 || obj.y+width/2;
    const angleRad = obj.angle * Math.PI / 180;

    // Половины размеров
    const halfLength = length / 2;
    const halfWidth = width / 2;

    // Углы в локальной системе координат
    const cornersLocal = [
        { x: -halfLength, y: -halfWidth }, // задний левый
        { x:  halfLength, y: -halfWidth }, // передний левый
        { x:  halfLength, y:  halfWidth }, // передний правый
        { x: -halfLength, y:  halfWidth }  // задний правый
    ];

    // Поворачиваем и преобразуем в мировые координаты
    return cornersLocal.map(corner => {
        // Применяем поворот
        const rotatedX = corner.x * Math.cos(angleRad) - corner.y * Math.sin(angleRad);
        const rotatedY = corner.x * Math.sin(angleRad) + corner.y * Math.cos(angleRad);

        // Возвращаем абсолютные мировые координаты
        return {
            x: centerX + rotatedX,
            y: centerY + rotatedY
        };
    });
}

const tanks = {
    "Об. 268":             () => new Tank("Об. 268", 1908, 120, 14.2, 303, 690, 48, 18, 45.05, 60, 12),
    "ИС-7":                () => new Tank("ИС-7", 2550, 153, 11.4, 268, 460, 42, 15, 34.91, 19.68),
    "ИС-4":                () => new Tank("ИС-4", 2800, 161, 9.63, 252, 420, 42, 14, 32.03, 16.06),
    "Об. 140":             () => new Tank("Об. 140", 1800, 93, 5.37, 240, 300, 60, 20, 59.14, 45.89),
    "Т-62А":               () => new Tank("Т-62А", 1900, 122, 6.52, 245, 330, 55, 20, 61.33, 47.98),
    "Т-100 ЛТ":            () => new Tank("Т-100 ЛТ", 1750, 61, 5.94, 230, 310, 66, 25, 59.14, 41.72),
    "T110E4":              () => new Tank("T110E4", 2000, 155, 13.42, 275, 630, 37, 10, 29.57, 14.60, 90),
    "T110E3":              () => new Tank("T110E3", 1950, 140, 16.3, 285, 680, 34, 10, 28.47, 60, 12),
    "T110E5":              () => new Tank("T110E5", 2300, 133, 9.49, 254, 400, 42, 12, 27.38, 22.95),
    "M48 Patton":          () => new Tank("M48 Patton", 1850, 106, 6.52, 248, 340, 48, 17, 54.76, 41.72),
    "Sheridan":            () => new Tank("Sheridan", 1700, 27, 13.42, 230, 560, 63, 22, 59.14, 37.55),
    "Grille 15":           () => new Tank("Grille 15", 1850, 22, 11.3, 300, 580, 50, 17, 30.66, 60, 50),
    "Jg.Pz. E 100":        () => new Tank("Jg.Pz. E 100", 2150, 157, 16.84, 314, 800, 30, 12, 31.21, 60, 12),
    "VK 72.01 K":          () => new Tank("VK 72.01 K", 2450, 169, 15.34, 258, 600, 32, 15, 21.9, 18.77),
    "Maus":                () => new Tank("Maus", 2900, 203, 11.51, 250, 460, 25, 15, 19.71, 13.56),
    "E 100":               () => new Tank("E 100", 2750, 173, 18.53, 258, 680, 30, 15, 29.26, 17.86),
    "E 50 M":              () => new Tank("E 50 M", 1900, 139, 6.52, 245, 340, 60, 20, 48.19, 31.29),
    "Leopard 1":           () => new Tank("Leopard 1", 1800, 50, 6.23, 255, 360, 65, 23, 59.14, 37.55),
    "FV205b Alligator":    () => new Tank("FV205b Alligator", 1900, 153, 6.81, 259, 400, 25 , 12, 29.57, 60, 19),
    "FV215b 183":          () => new Tank("FV215b 183", 1908, 132, 20.18, 315, 930, 34, 14, 33.8, 19.19, 90),
    "FV4202":              () => new Tank("FV4202", 1900, 113, 6.71, 255, 350, 60, 20, 54.76, 41.72),
    "Vickers Light":       () => new Tank("Vickers Light", 1750, 74, 6.23, 250, 300, 63, 23, 61.33, 41.72),
    "FV215b":              () => new Tank("FV215b", 2300, 129, 7.67, 259, 400, 36, 12, 36.14, 26.07),
    "Ho-Ri":               () => new Tank("Ho-Ri", 1900, 140, 11.51, 310, 560, 45 ,20, 36.14, 60, 7),
    "STB-1":               () => new Tank("STB-1", 1850, 91, 6.42, 245, 330, 55, 20, 52.57, 43.81),
    "Type 71":             () => new Tank("Type 71", 2550, 136, 10.31, 255, 420, 37, 15, 26.10, 16.98),
    "WZ-113G FT":          () => new Tank("WZ-113G FT", 2000, 146, 16.3, 278, 640, 42, 15, 37.24, 60, 12),
    "WZ-121":              () => new Tank("WZ-121", 1900, 117, 8.34, 245, 420, 56, 20, 58.14, 41.72),
    "WZ-113":              () => new Tank("WZ-113", 2300, 142, 7.67, 259, 400, 45, 15, 30.66, 20.86),
    "BZ-75":               () => new Tank("BZ-75", 2400, 134, 18.9, 256, 700, 35, 10, 32.51, 28.75),
    "WZ-132-1":            () => new Tank("WZ-132-1", 1750, 61, 7.57, 237, 360, 65, 20, 54.76, 39.63),
    "60TP Lewandowskiego": () => new Tank("60TP Lewandowskiego", 2600, 142, 16.3, 252, 630, 36, 15, 30.66, 17.73),
    "CS-63":               () => new Tank("CS-63", 1750, 70, 6.9, 248, 340, 56, 23, 51.47, 39.63),
    "ЛВ-1300 Уран":        () => new Tank("ЛВ-1300 Уран", 2400, 151, 12.94, 255, 460, 35, 15, 29.57, 15.64)
};

module.exports = {tanks, checkCollision, map};